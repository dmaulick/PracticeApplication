apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    testOptions.unitTests.includeAndroidResources = true
    compileSdkVersion rootProject.androidCompileSdkVersion
    buildToolsVersion rootProject.androidBuildToolsVersion
    defaultConfig {
        applicationId "com.example.practiceapplication"
        minSdkVersion rootProject.androidMinSdkVersion
        targetSdkVersion rootProject.androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    def appDependencies = rootProject.appDependencies
    def appTestDependencies = rootProject.appTestDependencies

    // Dagger
    implementation 'com.google.dagger:dagger:2.11'
    kapt 'com.google.dagger:dagger-compiler:2.11'

    // Libs
    implementation appDependencies.appcompat
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation appDependencies.androidxfragmentNav
    implementation appDependencies.androidxNavUi


    // Android Testing
    androidTestImplementation appTestDependencies.androidxTestRunner
    androidTestImplementation appTestDependencies.androidxTestJunit
    androidTestImplementation appTestDependencies.androidxTestEspressoIntents
    androidTestImplementation appTestDependencies.androidxTestEspressoCore
    androidTestImplementation appTestDependencies.androidxTestTruth
    debugImplementation appTestDependencies.androidxFragmentTesting // debug implementation because of way fragment scenario is implemented


    // Roboelectric Testing
    testImplementation appTestDependencies.androidxTestRunner
    testImplementation appTestDependencies.androidxTestJunit
    testImplementation appTestDependencies.androidxTestEspressoIntents
    testImplementation appTestDependencies.androidxTestEspressoCore
    testImplementation appTestDependencies.androidxTestTruth
    testImplementation appTestDependencies.androidxRoboelectric

//    testImplementation 'junit:junit:4.12'

}
